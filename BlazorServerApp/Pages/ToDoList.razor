@page "/todo"
@using System.Text.Json
@inject IJSRuntime JSRuntime

<PageTitle>Todo</PageTitle>

<h3>ToDoList</h3>

<ul>
    @foreach (var todo in todos)
    {
        <li>
            <input type="checkbox" @bind="todo.IsDone" />
            <input @bind="todo.Title" />
            <select @bind="todo.Urgency">
                <option value="VeryUrgent">Very Urgent</option>
                <option value="NotSoUrgent">Not So Urgent</option>
                <option value="ForLater">For Later</option>
            </select>
        </li>
    }
</ul>

<input placeholder="Something todo" @bind="newTodo" />
<button @onclick="AddTodo">Add todo</button>


@code {

    @inject IJSRuntime JSRuntime

    @code {
        private List<ToDoItem> todos = new();
        private string? newTodo;

        protected override async Task OnInitializedAsync()
        {
            var savedTodos = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "todos");
            if (!string.IsNullOrEmpty(savedTodos))
            {
                todos = JsonSerializer.Deserialize<List<ToDoItem>>(savedTodos);
            }
        }

        private async Task SaveTodos()
        {
            var todosJson = JsonSerializer.Serialize(todos);
            await JSRuntime.InvokeVoidAsync("localStorage.setItem", "todos", todosJson);
        }

        private void AddTodo()
        {
            if (!string.IsNullOrWhiteSpace(newTodo))
            {
                todos.Add(new ToDoItem { Title = newTodo, Urgency = Urgency.NotSoUrgent });
                newTodo = string.Empty;
                SaveTodos();
            }
        }


    }

}
